name: Create release notes
description: |
  Extracts release notes for current tag from CHANGELOG.md and writes them to a file called RELEASE.md.
  It is assumed that a header for RELEASE.md is found in the file RELEASE_HEAD.md.
inputs:
  version:
    description: 'Version number to search for in CHANGELOG.md (default: use tag without leading v)'
    required: false
    default: <tag version>
  start-pattern:
    description: Sed pattern to find heading with correct version in CHANGELOG.md
    required: false
    default: '^## \\[${RELEASE_VERSION}\\]'
  end-pattern:
    description: Sed pattern to find next heading in CHANGELOG.md that does not belong to this version anymore
    required: false
    default: '^## '
runs:
  using: "composite"
  steps:
    - name: Set RELEASE_VERSION
      shell: bash
      run: |
        if [ $version == "<tag version>" ] then
          echo "RELEASE_VERSION=$version" >> $GITHUB_ENV
        else
          RELEASE_VERSION_TEMP=${GITHUB_REF#refs/*/}
          echo "RELEASE_VERSION=${RELEASE_VERSION_TEMP#v}" >> $GITHUB_ENV
        fi

    - name: Extract changelog for release version
      shell: bash
      # explanation of sed command:
      # 1. select lines between start-pattern and end-pattern
      # 2. invert this selection
      # 3. delete it
      # => only selection is remaining in stream
      run: |
        cp RELEASE_HEAD.md RELEASE.md
        printf "\n" >> RELEASE.md
        sed -e "/${{ start-pattern }}/,/${{ end-pattern }}/ ! d" CHANGELOG.md | head -n -2 >> RELEASE.md
